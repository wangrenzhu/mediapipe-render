/* Copyright 2022 The MediaPipe Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto2";

package mediapipe.tasks;

import "mediapipe/tasks/cc/components/containers/category.proto";

// List of predicted categories with an optional timestamp.
message ClassificationEntry {
  // The array of predicted categories, usually sorted by descending scores,
  // e.g., from high to low probability.
  repeated Category categories = 1;
  // The optional timestamp (in milliseconds) associated to the classifcation
  // entry. This is useful for time series use cases, e.g., audio
  // classification.
  optional int64 timestamp_ms = 2;
}

// Classifications for a given classifier head.
message Classifications {
  repeated ClassificationEntry entries = 1;
  // The index of the classifier head these categories refer to. This is useful
  // for multi-head models.
  optional int32 head_index = 2;
  // The name of the classifier head, which is the corresponding tensor metadata
  // name.
  // TODO: Add github link to metadata_schema.fbs.
  optional string head_name = 3;
}

// Contains one set of results per classifier head.
message ClassificationResult {
  repeated Classifications classifications = 1;
}
